services:
  # Volitelné: Lokální PostgreSQL pro development (zakomentováno pro Supabase)
  # Odkomentujte pokud chcete používat lokální databázi
  # db:
  #   image: pgvector/pgvector:pg16
  #   environment:
  #     POSTGRES_DB: pillsee
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "54323:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./supabase-setup.sql:/docker-entrypoint-initdb.d/init.sql
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  # PillSee Backend
  backend:
    build:
      context: ./pillsee-backend
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Supabase Cloud Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    ports:
      - "8000:8000"
    # depends_on:  # Odstraněno - Supabase běží v cloudu
    #   db:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PillSee Frontend
  frontend:
    build:
      context: ./pillsee-frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

# volumes:  # Odstraněno - Supabase cloud databáze
#   postgres_data:

networks:
  default:
    driver: bridge